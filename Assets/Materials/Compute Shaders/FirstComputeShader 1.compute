#pragma kernel CSMain

struct Cube {
    float3 position;
    float4 color;
};

RWStructuredBuffer<Cube> cubes;
float resolution;
float repetitions;

float Random(float2 coords) {
    return(frac(sin(dot(coords.xy, float2(12.9898, 78.233))) * 43758.5453)) * 1;
}

[numthreads(10,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    float xPos = id.x / resolution;

    Cube cube = cubes[id.x];
    
    for (int i = 0; i < repetitions; i++) {
        float zPos = Random(float2(xPos, cube.position.z));
        cube.position.z = zPos;

        float r = Random(float2(cube.color.r, cube.color.g));
        float g = Random(float2(cube.color.g, cube.color.b));
        float b = Random(float2(cube.color.b, cube.color.r));
        cube.color = float4(r, g, b, 1.0);
    }

    cubes[id.x] = cube;
}
